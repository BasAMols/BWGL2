{
  "version": 3,
  "sources": ["../ts/classes/util/math/vector2.ts", "../ts/classes/elements/element.ts", "../ts/classes/elements/domElement.ts", "../ts/classes/util/event.ts", "../ts/classes/elements/renderer.ts", "../ts/classes/input/gamepad.ts", "../ts/classes/input/gamepadManager.ts", "../ts/classes/elements/domText.ts", "../ts/classes/input/inputDevices.ts", "../ts/classes/ticker.ts", "../ts/classes/util/loader.ts", "../ts/game.ts", "../ts/index.ts"],
  "sourcesContent": ["export function v2(n: [number, number?] | number, y?: number) {\r\n\tif (typeof n === 'number') {\r\n\t\treturn Vector2.f(n, y);\r\n\t} else if (typeof n === 'undefined') {\r\n\t\treturn Vector2.f(0);\r\n\t} else {\r\n\t\treturn Vector2.f(...n);\r\n\t}\r\n}\r\n\r\nexport class Vector2 {\r\n\tx: number;\r\n\ty: number;\r\n\tstatic Vector2: {};\r\n\tconstructor(x: number, y: number) {\r\n\t\tthis.x = (x === undefined) ? 0 : x;\r\n\t\tthis.y = (y === undefined) ? 0 : y;\r\n\t}\r\n\r\n\tstatic f(x: number = 0, y: number = x) {\r\n\t\treturn new Vector2(x, y);\r\n\t}\r\n\r\n\tisZero(): boolean {\r\n\t\treturn (this.x === 0 && this.y === 0)\r\n\t}\r\n\r\n\tclone(): Vector2 {\r\n\t\treturn new Vector2(this.x, this.y);\r\n\t}\r\n\r\n\tadd(vector: Vector2) {\r\n\t\treturn new Vector2(this.x + vector.x, this.y + vector.y);\r\n\t}\r\n\r\n\tmultiply(vector: Vector2) {\r\n\t\treturn new Vector2(this.x * vector.x, this.y * vector.y);\r\n\t}\r\n\r\n\tsubtract(vector: Vector2) {\r\n\t\treturn new Vector2(this.x - vector.x, this.y - vector.y);\r\n\t}\r\n\r\n\tscale(scalar: number) {\r\n\t\treturn new Vector2(this.x * scalar, this.y * scalar);\r\n\t}\r\n\r\n\tdot(vector: Vector2) {\r\n\t\treturn (this.x * vector.x + this.y + vector.y);\r\n\t}\r\n\r\n\tmoveTowards(vector: Vector2, t: number) {\r\n\t\tt = Math.min(t, 1); // still allow negative t\r\n\t\tvar diff = vector.subtract(this);\r\n\t\treturn this.add(diff.scale(t));\r\n\t}\r\n\r\n\tmagnitude() {\r\n\t\treturn Math.sqrt(this.magnitudeSqr());\r\n\t}\r\n\r\n\tmagnitudeSqr() {\r\n\t\treturn (this.x * this.x + this.y * this.y);\r\n\t}\r\n\r\n\tclampMagnitude( max:number = 1 ) {\r\n\t\tif (this.magnitude() === 0) return v2(0);\r\n\t\treturn this.scale( 1/ this.magnitude() || 1 ).scale( Math.min( max, this.magnitude() ) );\r\n\t}\r\n\r\n\tdistance(vector: Vector2) {\r\n\t\treturn Math.sqrt(this.distanceSqr(vector));\r\n\t}\r\n\r\n\tdistanceSqr(vector: Vector2) {\r\n\t\tvar deltaX = this.x - vector.x;\r\n\t\tvar deltaY = this.y - vector.y;\r\n\t\treturn (deltaX * deltaX + deltaY * deltaY);\r\n\t}\r\n\r\n\tnormalize() {\r\n\t\tvar mag = this.magnitude();\r\n\t\tvar vector = this.clone();\r\n\t\tif (Math.abs(mag) < 1e-9) {\r\n\t\t\tvector.x = 0;\r\n\t\t\tvector.y = 0;\r\n\t\t} else {\r\n\t\t\tvector.x /= mag;\r\n\t\t\tvector.y /= mag;\r\n\t\t}\r\n\t\treturn vector;\r\n\t}\r\n\r\n\tangleDegrees() {\r\n\t\treturn this.angle() * (180/Math.PI);\r\n\t}\r\n\r\n\tangle() {\r\n\t\treturn Math.atan2(this.y, this.x);\r\n\t}\r\n\r\n\r\n\trotate(rad: number) {\r\n\t\tvar cos = Math.cos(rad);\r\n\t\tvar sin = Math.sin(rad);\r\n\t\treturn new Vector2(\r\n\t\t\tthis.x * cos - this.y * sin,\r\n\t\t\tthis.x * sin + this.y * cos\r\n\t\t);\r\n\t}\r\n\r\n\ttoPrecision(precision: number) {\r\n\t\tvar vector = this.clone();\r\n\t\tvector.x = +vector.x.toFixed(precision);\r\n\t\tvector.y = +vector.y.toFixed(precision);\r\n\t\treturn vector;\r\n\t}\r\n\r\n\ttoString() {\r\n\t\tvar vector = this.toPrecision(1);\r\n\t\treturn (\"[\" + vector.x + \"; \" + vector.y + \"]\");\r\n\t}\r\n\r\n\tpublic clamp(min:Vector2, max:Vector2) {\r\n\t\treturn Vector2.clamp(this, min, max);\r\n    }\r\n\r\n\tpublic static min(a:Vector2, b:Vector2) {\r\n        return new Vector2(\r\n\t\t\tMath.min(a.x, b.x),\r\n\t\t\tMath.min(a.y, b.y),\r\n\t\t)\r\n    }\r\n\r\n\tpublic static max(a:Vector2, b:Vector2) {\r\n\t\treturn new Vector2(\r\n\t\t\tMath.max(a.x, b.x),\r\n\t\t\tMath.max(a.y, b.y),\r\n\t\t)\r\n    }\r\n\r\n\tpublic static clamp(value:Vector2, min:Vector2, max:Vector2) {\r\n        return Vector2.max(Vector2.min(value, min), max);\r\n    }\r\n\r\n\tpublic clampMagnitute(mag: number) {\r\n\t\treturn Vector2.clampMagnitute(this, mag);\r\n    }\r\n\r\n\tget array() {\r\n\t\treturn [this.x, this.y];\r\n\t}\r\n\r\n\tset array(a: [number, number]) {\r\n\t\t[this.x, this.y] = a;\r\n\t}\r\n\r\n\tget surfaceArea():number {\r\n\t\treturn this.x*this.y\r\n\t}\r\n\r\n\r\n\tpublic static clampMagnitute(value:Vector2, mag: number) {\r\n\t\tvar ratio = value.magnitude() / mag;\r\n\t\treturn new Vector2(value.x / ratio, value.y / ratio);\r\n    }\r\n\r\n\tstatic get zero() {\r\n\t\treturn new Vector2(0, 0);\r\n\t}\r\n\tstatic get down() {\r\n\t\treturn new Vector2(0, -1);\r\n\t}\r\n\tstatic get up() {\r\n\t\treturn new Vector2(0, 1);\r\n\t}\r\n\tstatic get right() {\r\n\t\treturn new Vector2(1, 0);\r\n\t}\r\n\tstatic get left() {\r\n\t\treturn new Vector2(-1, 0);\r\n\t}\r\n\tstatic get fromDegree() {\r\n\t\treturn new Vector2(0, 0);\r\n\t}\r\n}\r\n", "import { glob } from '../../game';\r\nimport { TickerReturnData } from '../ticker';\r\nimport { Events } from \"../util/event\";\r\n\r\nexport type ElementAttributes = {\r\n\r\n};\r\n\r\nexport abstract class Element {\r\n    public abstract rendererType: 'dom' | 'gl';\r\n\r\n    private events: Events<unknown>[] = [];\r\n\r\n    get t(): TickerReturnData {\r\n        return glob.game.t;\r\n    }\r\n\r\n    public parent!: Element;\r\n\r\n    public build(): void {\r\n        //\r\n    }\r\n\r\n    addEvent(e: Events<unknown>) {\r\n        this.events.push(e);\r\n    }\r\n\r\n    getEvent(id: string) {\r\n        return this.events.find((e) => id === e.id);\r\n    }\r\n}\r\n", "import { Element, ElementAttributes } from '../elements/element';\r\nimport { Vector2, v2 } from '../util/math/vector2';\r\nimport { TickerReturnData } from '../ticker';\r\n\r\n\r\nexport type DomElementAttributes = ElementAttributes & {\r\n    id?: string,\r\n    background?: string,\r\n    position?: Vector2;\r\n    size?: Vector2;\r\n};\r\nexport class DomElement<T extends keyof HTMLElementTagNameMap> extends Element {\r\n    public dom: HTMLElementTagNameMap[T];\r\n    public children: DomElement<any>[] = [];\r\n    public rendererType = 'dom' as const;\r\n    private _position: Vector2 = v2(0);\r\n    public get position(): Vector2 {\r\n        return this._position;\r\n    }\r\n    public set position(value: Vector2) {\r\n        this._position = value;\r\n        this.x = value.x;\r\n        this.y = value.y\r\n    }\r\n    public size: Vector2 = v2(0);\r\n\r\n    public get id() { return this.dom.id; }\r\n\r\n    public set id(value: string) {\r\n        if (value) {\r\n            this.dom.id = value;\r\n        }\r\n    }\r\n\r\n    public get x(): number {\r\n        return Math.round(Number(this.dom.style.left.replace(/\\D/g,'')));\r\n    }\r\n    public set x(n: number) {\r\n        if (this.dom){\r\n            this.dom.style.left = `${n}px`;\r\n        }\r\n    }\r\n    public get y(): number {\r\n        return Math.round(Number(this.dom.style.bottom.replace(/\\D/g,'')));\r\n    }\r\n    public set y(n: number) {\r\n        if (this.dom){\r\n            this.dom.style.bottom = `${n}px`;\r\n        }\r\n    }\r\n\r\n    public set visible(value: boolean) {\r\n        this.dom? this.dom.style.display = value ? 'block' : 'none': null\r\n    }\r\n\r\n    public set background(v: string) {\r\n        this.dom.style.background = v;\r\n    }\r\n\r\n    public get width() {\r\n        return Math.round(Number(this.dom.style.width.replace(/\\D/g,'')));\r\n    }\r\n    public set width(value: number) {\r\n        if (this.dom) {\r\n            this.dom.style.width = `${value}px`;\r\n            this.dom.setAttribute('width', String(value));\r\n        }\r\n    }\r\n\r\n    public get height() {\r\n        return Math.round(Number(this.dom.style.height.replace(/\\D/g,'')));\r\n    }\r\n    public set height(value: number) {\r\n        if (this.dom) {\r\n            this.dom.style.height = `${value}px`;\r\n            this.dom.setAttribute('height', String(value));\r\n        }\r\n    }\r\n\r\n    constructor(type: T, attr: DomElementAttributes = {}) {\r\n        super();\r\n        this.dom = document.createElement(type);\r\n        this.dom.style.position = 'absolute';\r\n        this.dom.style.transformOrigin = 'bottom left';\r\n        this.dom.style.pointerEvents = 'none';\r\n        this.dom.style.bottom = '0px';\t\r\n        this.id = attr.id || '';\r\n        this.background = attr.background || '';\r\n        this.size = attr.size || Vector2.zero;\r\n        this.position = attr.position || Vector2.zero;\r\n        \r\n    }\r\n\r\n    public ready() {\r\n        this.build();\r\n    }\r\n\r\n    public tick(obj: TickerReturnData): void {\r\n        this.children.forEach((c)=>{\r\n            c.tick(obj);\r\n        })\r\n    }\r\n\r\n    public appendChild(e: DomElement<any>) {\r\n        this.dom.appendChild(e.dom);\r\n    }\r\n\r\n    public addChild(child: DomElement<any>) {\r\n        this.children.push(child);\r\n        this.dom.appendChild(child.dom);\r\n    }\r\n\r\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\r\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\r\n        this.dom.addEventListener(type, listener, options);\r\n    };\r\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\r\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void {\r\n        this.dom.removeEventListener(type, listener, options);\r\n    };\r\n\r\n\r\n\r\n}\r\n", "export type eventFunction<T> = (v: T) => void;\r\nexport class Events<T> {\r\n    public id: string;\r\n    private subscribers: Record<string, eventFunction<T>> = {};\r\n    constructor(id: string) {\r\n        this.id = id;\r\n    }\r\n\r\n    public subscribe(key: string, func: eventFunction<T>) {\r\n        this.subscribers[key] = func;\r\n    }\r\n\r\n    public alert(v: T) {\r\n        Object.values(this.subscribers).forEach((s) => {\r\n            s(v);\r\n        });\r\n    }\r\n}\r\n", "import { ElementAttributes } from '../elements/element';\r\nimport { Vector2, v2 } from '../util/math/vector2';\r\nimport { TickerReturnData } from '../ticker';\r\nimport { DomElement } from './domElement';\r\nimport { Level } from '../level';\r\nimport { Events } from '../util/event';\r\nimport { glob } from '../../game';\r\n\r\nexport type DomElementAttributes = ElementAttributes & {\r\n    id?: string,\r\n    size?: Vector2,\r\n    background?: string,\r\n    position?: Vector2;\r\n};\r\nexport class Renderer extends DomElement<'canvas'> {\r\n    public tickerData: TickerReturnData;\r\n\r\n    constructor() {\r\n        super('canvas');\r\n        this.dom.style.position = 'absolute';\r\n        this.dom.style.pointerEvents = 'all';\r\n        this.dom.style.bottom = '0px';\r\n        this.dom.style.touchAction = 'none';\r\n        this.dom.tabIndex = 1;\r\n\r\n        window.addEventListener(\"resize\", () => {\r\n            this.resize();\r\n        });\r\n\r\n        this.addEvent(new Events('resize'));\r\n        this.resize();\r\n    }\r\n\r\n    resize() {\r\n        this.size = v2(document.body.clientWidth, document.body.clientHeight);\r\n        this.dom.style.width = `${this.size.x}px`;\r\n        this.dom.setAttribute('width', String(this.size.x));\r\n\r\n        this.dom.style.height = `${this.size.y}px`;\r\n        this.dom.setAttribute('height', String(this.size.y));\r\n\r\n        this.getEvent('resize').alert(this.size);\r\n\r\n    }\r\n\r\n    public get width() {\r\n        return Math.round(Number(this.dom.style.width.replace(/\\D/g, '')));\r\n    }\r\n    public set width(value: number) {\r\n        this.dom.style.width = `${value}px`;\r\n        this.dom.setAttribute('width', String(value));\r\n    }\r\n\r\n    public get height() {\r\n        return Math.round(Number(this.dom.style.height.replace(/\\D/g, '')));\r\n    }\r\n    public set height(value: number) {\r\n        this.dom.style.height = `${value}px`;\r\n        this.dom.setAttribute('height', String(value));\r\n    }\r\n\r\n    public addLevel(child: Level) {\r\n        child.build();\r\n    }\r\n\r\n    private _context: '2d' | '3d';\r\n    public get context(): '2d' | '3d' {\r\n        return this._context;\r\n    }\r\n    public set context(value: '2d' | '3d') {\r\n        this._context = value;\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n        this.tickerData = obj;\r\n        glob.game.active?.tick(obj);\r\n        \r\n    }\r\n}\r\n\r\n\r\n", "export class Pad {\r\n    recentPad: Gamepad;\r\n    constructor(public gamepad:Gamepad) {\r\n        \r\n    }\r\n\r\n    tick() {\r\n        this.recentPad = navigator.getGamepads().find((g)=>g.id === this.gamepad.id);\r\n        // console.log(this.recentPad.buttons[7]);\r\n        \r\n    }\r\n}", "import { Pad } from './gamepad';\r\n\r\nexport class PadManager {\r\n    private pads: Record<string, Pad> = {};\r\n    constructor() {\r\n        window.addEventListener(\"gamepadconnected\", this.connect.bind(this));\r\n        window.addEventListener(\"gamepaddisconnected\", this.disconnect.bind(this));\r\n    }\r\n    connect(e: GamepadEvent) {\r\n        this.pads[e.gamepad.id] = new Pad(e.gamepad);\r\n    }\r\n    disconnect(e: GamepadEvent) {\r\n        delete this.pads[e.gamepad.id];\r\n    }\r\n    tick() {\r\n        // console.log(this.pads);\r\n        \r\n        Object.values(this.pads).forEach((pad)=>{\r\n            pad.tick();\r\n        });\r\n    }\r\n}", "import { DomElement, DomElementAttributes } from \"./domElement\";\r\n\r\nexport type  DomTextAttributes = DomElementAttributes & {\r\n    text?: string,\r\n    color?: string,\r\n    fontSize?: number,\r\n    fontWeight?: number,\r\n    fontFamily?: string,\r\n    padding?: [number,number,number,number],\r\n}\r\nexport class DomText extends DomElement<'div'> {\r\n    set color (v: string) {\r\n        this.dom.style.color = v; \r\n    }\r\n    set fontSize (v: number) {\r\n        this.dom.style.fontSize = String(v)+'px'; \r\n    }\r\n    set fontWeight (v: number) {\r\n        this.dom.style.fontWeight = String(v); \r\n    }\r\n    set fontFamily (v: string) {\r\n        this.dom.style.fontFamily = v; \r\n    }\r\n    public get text() {\r\n        return this.dom.innerHTML;\r\n    }\r\n    public set text (v: string) {\r\n        this.dom.innerHTML = v?v:''; \r\n    }\r\n    public set padding (v: [number,number,number,number]) {\r\n        this.dom.style.padding = v.join('px ')+'px'; \r\n    }\r\n    public constructor(attr: DomTextAttributes = {}) {\r\n        super('div', attr);\r\n        this.color = attr.color;\r\n        this.text = attr.text;\r\n        this.fontSize = attr.fontSize;\r\n        this.fontWeight = attr.fontWeight;\r\n        this.fontFamily = attr.fontFamily;\r\n        this.padding = attr.padding || [0,0,0,0];\r\n\r\n        this.dom.style.pointerEvents = 'none';\r\n        this.dom.style.userSelect = 'none';\r\n        this.dom.style.zIndex = '1';\r\n        this.dom.style.whiteSpace = 'pre-line';\r\n    }\r\n}", "import { glob } from '../../game';\r\nimport { DomText } from '../elements/domText';\r\n\r\nexport class Keyboard {\r\n\r\n    private keyDown: Record<string, [(frame: number) => void]> = {};\r\n    private keyUp: Record<string, [() => void]> = {};\r\n\r\n    ready() {\r\n        glob.renderer.dom.addEventListener('keydown', (e) => {\r\n            const k = e.key.toLowerCase();\r\n            this.keyDown[k]?.forEach((c) => {\r\n                c(glob.frame);\r\n            });\r\n        });\r\n        glob.renderer.dom.addEventListener('keyup', (e) => {\r\n            const k = e.key.toLowerCase();\r\n            this.keyUp[k]?.forEach((c) => {\r\n                c();\r\n            });\r\n        });\r\n    }\r\n\r\n    register(key: string, down: (frame: number) => void, up: () => void) {\r\n        const k = key.toLowerCase();\r\n\r\n        if (this.keyDown[k]) this.keyDown[k].push(down);\r\n        else this.keyDown[k] = [down];\r\n\r\n        if (this.keyUp[k]) this.keyUp[k].push(up);\r\n        else this.keyUp[k] = [up];\r\n    }\r\n}\r\n\r\nexport class InputDevices {\r\n    public keyboard: Keyboard = new Keyboard();\r\n    private overlay: DomText;\r\n    private _locked: boolean;\r\n    public mobile: boolean;\r\n    public get locked(): boolean {\r\n        return this._locked;\r\n    }\r\n    public set locked(value: boolean) {\r\n        this._locked = value;\r\n        // this.overlay.dom.style.display = !value ? 'block' : 'none';\r\n    }\r\n    constructor() {\r\n        this.overlay = new DomText({\r\n            text: 'Pauzed',\r\n        });\r\n        this.overlay.dom.setAttribute('style', `\r\n            transform-origin: left bottom;\r\n            pointer-events: none;\r\n            bottom: 0px;\r\n            left: 0px;\r\n            user-select: none;\r\n            z-index: 999;\r\n            position: absolute;\r\n            height: 100vh;\r\n            width: 100vw;\r\n            color: white !important;\r\n            font-family: monospace;\r\n            font-weight: bold;\r\n            font-size: 40px;\r\n            padding-left: 50px;\r\n            padding-top: 20px;\r\n            box-sizing: border-box;\r\n            display: none;\r\n            text-transform: uppercase;`\r\n        );\r\n    }\r\n\r\n    ready() {\r\n        window.addEventListener(`contextmenu`, (e) => e.preventDefault());\r\n\r\n        this.mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n        if (this.mobile) {\r\n            //mobile\r\n            this.locked = true;\r\n\r\n        } else {\r\n            if (glob.game.active) {\r\n                glob.game.active.interface.touchControls.style.display = 'none';\r\n            }\r\n            // glob.renderer.dom.addEventListener('click', (e) => {\r\n            //     if (!this.locked) {\r\n            //         glob.renderer.dom.requestPointerLock();\r\n            //     }\r\n            // });\r\n\r\n            // document.addEventListener('pointerlockchange', () => {\r\n            //     this.locked = (document.pointerLockElement === glob.renderer.dom);\r\n            // });\r\n            document.body.appendChild(this.overlay.dom);\r\n\r\n        }\r\n        this.keyboard.ready();\r\n    }\r\n}\r\n", "import { glob } from '../game';\r\n\r\nexport type TickerReturnData = { interval: number, intervalS3: number, intervalS10: number, intervalS20: number, total: number, frameRate: number, frame: number; };\r\nexport type TickerCallback = (obj: TickerReturnData) => void;\r\nexport class Ticker {\r\n    private _running: boolean = false;\r\n    private started: boolean = false;\r\n    private pauzedTime: number = 0;\r\n    private intervalKeeper:number[] = []\r\n    private id: number;\r\n    public get running(): boolean {\r\n        return this._running;\r\n    }\r\n    public set running(value: boolean) {\r\n        this._running = value;\r\n        \r\n        if (value) {\r\n            this.pTime = performance.now() - this.pauzedTime;\r\n            this.id = window.requestAnimationFrame(this.frame.bind(this));\r\n        } else {\r\n            window.cancelAnimationFrame(this.id);\r\n            this.pauzedTime = performance.now() - this.pTime\r\n            \r\n        }\r\n    }\r\n    constructor() {\r\n        document.addEventListener(\"visibilitychange\", () => {\r\n            if (this.started) {\r\n                this.running = !document.hidden;\r\n            }\r\n        });\r\n    }\r\n    private callbacks: TickerCallback[] = [];\r\n    private sTime: number;\r\n    public get startTime() {\r\n        return this.sTime;\r\n    }\r\n    private eTime: number;\r\n    // public get elapsed() {\r\n    //     return this.eTime;\r\n    // }\r\n    private pTime: number;\r\n    private frameN: number = 0;\r\n\r\n    private averagedInterval(count: number, interval: number){\r\n        const average = this.intervalKeeper.slice(0,count).reduce((partialSum, a) => partialSum + a, 0) / count;\r\n        return Math.abs(interval - average) > 10?interval: average;\r\n    }\r\n\r\n    private frame(timeStamp: number) {\r\n\r\n        if (this.running) {\r\n            const interval = timeStamp - this.pTime;\r\n            this.intervalKeeper.push(interval);\r\n            this.intervalKeeper = this.intervalKeeper.slice(0,20);\r\n            while(this.intervalKeeper.length<20){\r\n                this.intervalKeeper.push(this.intervalKeeper[0]);\r\n            }\r\n\r\n            this.pTime = timeStamp;\r\n            this.frameN++;\r\n            glob.frame = this.frameN;\r\n\r\n            const o = {\r\n                interval,\r\n                total: this.eTime,\r\n                frameRate: 1000 / interval,\r\n                frame: this.frameN,\r\n                intervalS3: this.averagedInterval(3, interval),\r\n                intervalS10: this.averagedInterval(5, interval),\r\n                intervalS20: this.averagedInterval(20, interval),\r\n            };\r\n\r\n            this.callbacks.forEach((c) => {\r\n                c(o);\r\n            });\r\n\r\n            this.id = window.requestAnimationFrame(this.frame.bind(this));\r\n        }\r\n    }\r\n\r\n    public start() {\r\n        this.started = true;\r\n        this._running = true;\r\n        this.sTime = performance.now();\r\n        this.pTime = performance.now();\r\n        this.id = window.requestAnimationFrame(this.frame.bind(this));\r\n    }\r\n\r\n    public add(callback: TickerCallback) {\r\n        this.callbacks.push(callback);\r\n    }\r\n}\r\n", "import { DomElement } from '../elements/domElement';\r\nimport { DomText } from '../elements/domText';\r\nimport { Vector2 } from './math/vector2';\r\n\r\n\r\nexport class Loader extends DomElement<'div'> {\r\n    bar: DomElement<'div'>;\r\n    barBackground: DomElement<'div'>;\r\n    text: DomText;\r\n    public constructor( ) {\r\n        super('div',{\r\n            position: new Vector2(5, 5),\r\n            size: new Vector2(600, 70),\r\n            background: '#272727',\r\n        });\r\n\r\n        this.bar = new DomElement('div', {\r\n            size: new Vector2(600, 70),\r\n            background: '#80808070',\r\n        })\r\n        this.dom.appendChild(this.bar.dom);\r\n\r\n        this.text = new DomText({\r\n            text: '',\r\n            fontSize: 35,\r\n            fontWeight: 900,\r\n            color: 'white',\r\n            size: new Vector2(600, 70),\r\n            position: new Vector2(30, -10),\r\n            fontFamily: 'monospace',\r\n        });\r\n        this.dom.appendChild(this.text.dom);\r\n    }\r\n\r\n    public update(value: number, total: number){\r\n        this.text.text = `loaded ${total - value} out of ${total} assets`;\r\n        this.bar.width = 600 * (total - value) / total;\r\n    }\r\n}", "import { Renderer } from './classes/elements/renderer';\r\nimport { PadManager } from './classes/input/gamepadManager';\r\nimport { InputDevices } from './classes/input/inputDevices';\r\nimport { Level } from './classes/level';\r\nimport { Ticker, TickerReturnData } from './classes/ticker';\r\nimport { Loader } from './classes/util/loader';\r\n\r\nexport var glob = new class {\r\n    public game: Game;\r\n    public get renderer() {\r\n        return this.game.renderer;\r\n    }\r\n    public device: InputDevices = new InputDevices();\r\n    public get mobile(): boolean {\r\n        return this.device.mobile;\r\n    }\r\n    public frame: number = 0;\r\n};\r\n\r\nexport class Game {\r\n    public ticker: Ticker;\r\n    public renderer: Renderer;\r\n    public readyToStart: boolean = false;\r\n    private _waitCount: number = 0;\r\n    private started: boolean = false;\r\n    private loader: Loader;\r\n    \r\n    public total: number = 0;\r\n\r\n    public levels: Record<string, Level> = {};\r\n    public active: Level;\r\n\r\n    public padManager: PadManager = new PadManager();\r\n    get t(): TickerReturnData {\r\n        return this.renderer.tickerData;\r\n    }\r\n    public get waitCount(): number {\r\n        return this._waitCount;\r\n    }\r\n    public set waitCount(value: number) {\r\n        if (value > this._waitCount) {\r\n            this.total++;\r\n        }\r\n        if (!this.started) {\r\n            if (value === 0 && this.readyToStart) {\r\n                this.start();\r\n            } else {\r\n                this.loader.update(value, this.total);\r\n            }\r\n        }\r\n        this._waitCount = value;\r\n\r\n    }\r\n\r\n    public constructor() {\r\n        glob.game = this;\r\n        this.build();\r\n        glob.device.ready();\r\n    }\r\n\r\n\r\n    build() {\r\n        this.renderer = new Renderer();\r\n\r\n        this.loader = new Loader();\r\n        this.renderer.addChild(this.loader);\r\n\r\n        this.ticker = new Ticker();\r\n        this.ticker.add(this.tick.bind(this));\r\n\r\n        if (this.waitCount === 0) {\r\n            this.start();\r\n        } else {\r\n            this.readyToStart = true;\r\n        }\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        this.renderer.tick(obj);\r\n    }\r\n\r\n    protected addLevel(s: string, level: Level) {\r\n        this.levels[s] = level;\r\n        this.renderer.addLevel(level);\r\n        document.body.appendChild(level.interface.dom)\r\n    }\r\n\r\n    public get level(): Level {\r\n        return this.active;\r\n    }\r\n\r\n    public start() {\r\n        this.started = true;\r\n        this.loader.visible = false;\r\n        this.ticker.start();\r\n    }\r\n}\r\n\r\n\r\n", "import { Game } from \"./game\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n    const g = new Game();\r\n    document.body.appendChild(g.renderer.dom);\r\n});"],
  "mappings": "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",
  "names": []
}
